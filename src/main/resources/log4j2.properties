name = PropertiesConfig
# имя и папка лог файла в проекте
property.filename = logs/DataSyncApp.log

# настроили два вывода, в консоль и в файл
appenders = console, file

# вывод в консоль пользовательский, выводятся сообщения info и выше
appender.console.type = console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} - %msg%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = info

# вывод в файл служебный, выводятся debug и выше
appender.file.type = file
appender.file.name = LOGFILE
appender.file.fileName = ${filename}
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.file.filter.threshold.type = ThresholdFilter
appender.file.filter.threshold.level = debug

# при превышении размера лог файла должен архивироваться, но то не работает, то ругается
# appender.file.policies.type = Policies
# appender.file.policies.time.type = TimeBasedTriggeringPolicy
# appender.file.policies.time.interval = 1
# appender.file.policies.time.modulate = true
# appender.file.policies.size.type = SizeBasedTriggeringPolicy
# appender.file.policies.size.size = 10MB
# appender.file.strategy.type = DefaultRolloverStrategy
# appender.file.strategy.max = 20

# используется один логгер
loggers = pack

rootLogger.level = error
rootLogger.appenderRefs = file
rootLogger.appenderRef.logfile.ref = LOGFILE

# логгер уровня пакета, выводит и в консоль, и в файл, рут-логгер не дублирует вывод
logger.pack.name = DataSyncApp
logger.pack.level = trace
logger.pack.appenderRefs = console, file
logger.pack.appenderRef.stdout.ref = STDOUT
logger.pack.appenderRef.logfile.ref = LOGFILE
logger.pack.additivity = false